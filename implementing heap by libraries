/******************************************************************************

                          IMPLEMENTING MAX AND MIN HEAP BY LIBRARIES -  METHODS ARE:
                          .add(numb)------insert
                          .poll()  ------- delete top value
                          .peek()-------returns top value
                          PriorityQueue<Integer>heap=new PriorityQueue<>();
                          it acts as min heap
                          FOR MAX HEAP ADD (Comparator.reverseOrder())

*******************************************************************************/
import java.util.*;
public class Main
{
	public static void main(String[] args) {
		int[] arr=new int[]{67,-90,0,235,78,-908};
		// min HEAP
		PriorityQueue<Integer>min_heap=new PriorityQueue<>();
		for(int i=0;i<arr.length;i++){
		    min_heap.add(arr[i]);
		}
		System.out.println("DISPLAYING ELEMENTS BY POPPING MIN HEAP\n");
		for(int i=0;i<arr.length;i++){
		    System.out.println(min_heap.peek());
		    min_heap.poll();
		}
		PriorityQueue<Integer>max_heap=new PriorityQueue<>(Comparator.reverseOrder());
		for(int i=0;i<arr.length;i++){
		    max_heap.add(arr[i]);
		}
		System.out.println("DISPLAYING ELEMENTS BY POPPING MAX HEAP\n");
		for(int i=0;i<arr.length;i++){
		    System.out.println(max_heap.peek());
		    max_heap.poll();
		}
	}
}

